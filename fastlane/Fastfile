# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

STRINGS_FILES = {
    "IOS_STRINGS" => [
        "./HabitsCommon/en.lproj/Localizable.strings",
        "./fastlane/screenshots/en/title.strings",
        "./fastlane/screenshots/en/keyword.strings",
        "./HabitsTests/Fixtures/en.lproj/Localizable.strings"
    ],
    "XLIFF" => [
        "./localizations/en.xcloc/Localized\ Contents/en.xliff"
    ]
}

OTHER_LANGUAGES = ["it","de","ru","ja"]

def use_locale_names(mappings)
  for source, dest in mappings
    puts("rename #{source} to #{dest}")
  end
end

platform :ios do
  desc "Push a new release build to the App Store"
  lane :release do
    build_app(workspace: "Habits.xcworkspace", scheme: "Habits")
    upload_to_app_store(skip_metadata: true, skip_screenshots: true)
    increment_build_number
  end
  
  desc "Take screenshots"
  lane :screenshots do
    use_locale_names("de-DE": "de", "en-GB": "en")
    capture_ios_screenshots(
      localize_simulator: true, 
      # test_without_building: true,
      # derived_data_path: "/Users/mf/Library/Developer/Xcode/DerivedData"
      )
    frameit(path: './fastlane/screenshots')
  end
  
  desc "Show splash screen localisations"
  lane :splash_screen do
    exec("open '../Designs/Habits Assets.sketch'")
  end

  desc "Put metadata and screenshots"
  lane :put_metadata_and_screenshots do
    use_locale_names("de": "de-DE", "en": "en-GB")
    deliver(app_version: '2.1.5')
  end
  
  desc "Upload strings to OneSky"
  lane :upload_strings do
    puts("Don't forget to create launch screen images")
    export_localizations(
        destination_path: "./localizations",
        project: "Habits.xcodeproj"
    )
    for type in ["IOS_STRINGS", "XLIFF"]
        for path in STRINGS_FILES[type]
            onesky_upload(
                public_key: "MiXDY0pND19O6IpASejyxOpfbnqiFuri",
                secret_key: ENV["ONESKY_SECRET_KEY"],
                project_id: "353182",
                strings_file_path: path,
                strings_file_format: type, # IOS_STRINGS | XLIFF
                deprecate_missing: false
            )
        end
    end
    exec("open https://goodtohear.oneskyapp.com/admin/phrase/list/project/353182")
  end

  
  
  desc "Download OneSky translations"
  lane :download_strings do
      for language in OTHER_LANGUAGES
        for type in ["XLIFF", "IOS_STRINGS"]
            for path in STRINGS_FILES[type]
                filename = File.basename(path)
                path = path
                    .gsub("en.xcloc/Localized\ Contents/en", language)
                    .gsub("/en", "/#{language}")
                puts "Want to download #{language} version of #{filename} to #{path}"
                onesky_download(
                  public_key: "MiXDY0pND19O6IpASejyxOpfbnqiFuri",
                  secret_key: ENV["ONESKY_SECRET_KEY"],
                  project_id: "353182",
                  locale: language,
                  filename: filename,
                  destination: path
                )
            end
            if type == "XLIFF" 
              import_localizations(
                source_path: "./localizations/#{language}.xliff",
                project: "Habits.xcodeproj"
              )
            end
        end
        
    end
  end
end
